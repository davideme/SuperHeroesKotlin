apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'shot'
apply plugin: 'kotlin-kapt'


private static Properties loadMarvelProperties() {
    Properties props = new Properties()
    props.load(new FileInputStream("./app/marvel.properties"))
    props
}

private static checkMarvelProperties() {
    new File("./app/marvel.properties").exists()
}

static def getPublicMarvelKey() {
    if (checkMarvelProperties()) {
        Properties props = loadMarvelProperties()
        return props['MARVEL_PUBLIC_KEY']
    }
    "null"
}

static def getPrivateMarvelKey() {
    if (checkMarvelProperties()) {
        Properties props = loadMarvelProperties()
        return props['MARVEL_PRIVATE_KEY']
    }
    "null"
}

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId "com.karumi"
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.karumi.InjectedTestRunner"
        buildConfigField "String", "MARVEL_PUBLIC_KEY", getPublicMarvelKey()
        buildConfigField "String", "MARVEL_PRIVATE_KEY", getPrivateMarvelKey()
    }
    buildTypes {
        release {
            minifyEnabled false
        }
    }
}

configurations {
    ktlint
}

dependencies {
    ktlint 'com.github.shyiko:ktlint:0.9.0'

    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support:design:26.1.0'

    compile 'com.github.salomonbrys.kodein:kodein:4.1.0'
    compile 'com.github.salomonbrys.kodein:kodein-core:4.1.0'
    compile 'com.github.salomonbrys.kodein:kodein-android:4.1.0'
    compile 'com.github.salomonbrys.kodein:kodein-conf:4.1.0'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    compile 'co.metalab.asyncawait:asyncawait:1.0.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'org.funktionale:funktionale-either:1.1'
    compile 'com.karumi:marvelapiclient:0.0.4'

    // Lifecycles only (no ViewModel or LiveData)
    implementation "android.arch.lifecycle:runtime:1.1.0"
    kapt "android.arch.lifecycle:compiler:1.1.0"

    testCompile 'junit:junit:4.11'
    testCompile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testCompile "com.nhaarman:mockito-kotlin:1.5.0"


    androidTestCompile 'org.mockito:mockito-android:2.9.0'
    androidTestCompile 'org.mockito:mockito-core:2.10.0'
    androidTestCompile ('com.android.support.test.espresso:espresso-core:3.0.1') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    androidTestCompile('com.github.tmurakami:dexopener:0.12.0') {
        exclude group: 'com.android.support.test', module: 'runner'
    }
    androidTestCompile ('com.facebook.testing.screenshot:core:0.4.2') {
        exclude group: 'com.crittercism.dexmaker', module: 'dexmaker'
        exclude group: 'com.crittercism.dexmaker', module: 'dexmaker-dx'
    }
}

shot {
    appId = 'com.karumi'
}

task ktlint(type: JavaExec) {
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
}

check.dependsOn ktlint

task ktlintFormat(type: JavaExec) {
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}
